#! /usr/bin/env python
# coding:utf-8

"""
(%s_1)
"""

import requests
import json
import time
import datetime
from datetime import timedelta
import unittest
import uuid
import random
from testCase import vesionbook_mall as mall
from com import common
from com import configDB
from com import readConfig
sr = mall.SaveResult()


class Token(unittest.TestCase):
    def setUp(self):
        self._flag = "pass"
        print("this is setup")



    # (%s_2)
    def test_(%s_3)_caseID_(%s_4)(self):
        # 获取token
        gettoken = common.Common.get_token(self)
        _token = str(gettoken)
        
        # 一些可能用到的变量
        _randString = str(uuid.uuid4())[-8:]  
        _randInt = random.randint(0,100)
        today_date = datetime.date.today()
        _today = str(datetime.date.today())
        _yesterday = str(today_date - datetime.timedelta(days=1))
        _8DaysAgo = str(today_date - datetime.timedelta(days=8))
        _lastWeekStart = str(today_date - timedelta(days=today_date.weekday() + 7))
        _lastWeekEnd = str(today_date - timedelta(days=today_date.weekday() + 1))
        
        this_month_start = datetime.datetime(today_date.year, today_date.month, 1)
        last_month_end = (this_month_start - timedelta(days=1)).date()
        last_month_start = datetime.datetime(last_month_end.year, last_month_end.month, 1).date()

        _lastMonthStart = str(last_month_start)
        _lastMonthEnd = str(last_month_end)
        
        # 一些可能用到的变量
        
        url = readConfig.ReadBaseConfig().get_http_config('baseurl_user') + "(%s_5)"
        payload  = (%s_6)
        headers = (%s_7)
        r = requests.%s(url, data=json.dumps(payload), headers=headers)
        print(r, r.content)
        r_time = float(r.elapsed.microseconds)/1000

        time.sleep(1)
        r_json = r.json()
        print("r_json {}".format(r_json))

        respMessage = r_json["respMessage"]
        print(respMessage)
        r_status = r.status_code
        r_resp_code = str(r_json["respCode"])
        if r_resp_code != mall.SUCCESS_CODE or r_status != 200:
            self._flag = "fail"
        
        sql = (%s_8)
        if sql != 'null':
            api_judge = str(r_json(%s_9))
            db_test = configDB.MysqlHelper()
            sql_run_result = db_test.get_all(sql)

            if len(sql_run_result) == 0:
                judgeOne = 'SQL查询为空'
            else:
                judgeOne = str(sql_run_result[0][0])

                if judgeOne != api_judge:
                    self._flag = "fail"
                    
        if sql == 'null':
            judgeOne = 'null'
            api_judge = 'null'
        
        
        datas = [url, "%(s_10)", str(payload), str(r_json), 
        "resp_code="+ str(mall.SUCCESS_CODE)+ "\\nstatus=200", judgeOne, api_judge, self._flag, r_time]
        sr.save_result(datas)
        
        self.assertEqual(r_resp_code, mall.SUCCESS_CODE, msg="返回的状态码不等于"+str(mall.SUCCESS_CODE))
        self.assertEqual(api_judge, judgeOne, msg="接口返回结果为："+api_judge+",与期望结果“"+judgeOne+"”不一致。")
        

    if __name__ == "__main__":
        unittest.main()                    
        '''
		
		python模板中的%s分别对应测试用例excel字段为：
		s_1：接口用例名称
		s_2：接口用例名称
		s_3：产品（Mall、Retail等等）
		s_4：序号（目前没什么用，只是一个标识）
		s_5：接口路径
		s_6：请求参数
		s_7：请求头headers
		s_8：调用方法method
		s_9：python式的sql语句
		s_10：接口返回的json键
		s_11：接口用例名称
		
		'''